!<arch>
0-isupper.c/    0           0     0     644     236       `
#include "main.h"
/**
  * _isupper - checks for uppercase character
  * @c: char to check if upper or lower
  * Return: 1 if upper and 0 otherwise
  */

int _isupper(int c)
{
	if (c >= 65 && c <= 90)
		return (1);
	else
		return (0);
}
0-memset.c/     0           0     0     644     70        `
#include "main.h"

char *_memset(char *s, char b, unsigned int n)
{
}
0-strcat.c/     0           0     0     644     365       `
#include "main.h"
/**
  * _strcat - function that concatenates two strings
  * @dest : destination string
  * @src : source string
  * Return: concatenated sring
  */

char *_strcat(char *dest, char *src)
{
	char *destin2 = dest;

	while (*dest != '\0')
		dest++;
	while (*src != '\0')
	{
		*dest = *src;
		dest++;
		src++;
	}
	*dest = '\0';

	return (destin2);

}

100-atoi.c/     0           0     0     644     44        `
#include <stdio.h>

int _atoi(char *s)
{

}
1-isdigit.c/    0           0     0     644     277       `
#include "main.h"
/**
  * _isdigit -  checks for a digit
  * @c: number
  * Return: 1 if c is digit and 0 otherwise
  */

int _isdigit(int c)
{
	int isdigit = 0;
	int i;

	for (i = '0'; i <= '9'; i++)
	{
		if (c == i)
		{
			isdigit = 1;
			break;
		}
	}

	return (isdigit);
}

1-memcpy.c/     0           0     0     644     358       `
#include "main.h"
/**
 *_memcpy - a function that copies memory area
 *@dest: memory where is stored
 *@src: memory where is copied
 *@n: number of bytes
 *
 *Return: copied memory with n byted changed
 */

char *_memcpy(char *dest, char *src, unsigned int n)
{
	int r = 0;
	int i = n;

	for (; r < i; r++)
	{
		dest[r] = src[r];
		n--;
	}
	return (dest);
}
1-strncat.c/    0           0     0     644     365       `
#include "main.h"
/**
  * _strcat - function that concatenates two strings
  * @dest : destination string
  * @src : source string
  * Return: concatenated sring
  */

char *_strcat(char *dest, char *src)
{
	char *destin2 = dest;

	while (*dest != '\0')
		dest++;
	while (*src != '\0')
	{
		*dest = *src;
		dest++;
		src++;
	}
	*dest = '\0';

	return (destin2);

}

2-strchr.c/     0           0     0     644     55        `
#include "main.h"

char *_strchr(char *s, char c)
{

}

2-strlen.c/     0           0     0     644     45        `
#include "main.h"

int _strlen(char *s)
{

}

2-strncpy.c/    0           0     0     644     447       `
#include "main.h"
#include <stddef.h>
/**
  * _strncpy - function that copies a string.
  * @dest: string input
  * @src: struing input
  * @n: integer input
  * Return: destination pointer
  */

char *_strncpy(char *dest, char *src, int n)
{
	int i = 0;

	if (dest == NULL || src == NULL || n == 0)
		return (dest);
	while (i < n && src[i] != '\0')
	{
		dest[i] = src[i];
		i++;
	}
	while (i < n)
	{
		dest[i] = '\0';
		i++;
	}
	return (dest);
}

3-islower.c/    0           0     0     644     230       `
#include "main.h"

/**
  * _islower -  checks for lowercase character.
  * @c: char to check
  *
  * Return: 1 if c is lowercase, 0 otherwise
*/

int _islower(int c)
{
	if (c >= 97 && c <= 122)
		return (1);
	else
		return (0);
}
3-puts.c/       0           0     0     644     214       `
#include "main.h"

/**
  * _puts -  prints a string
  * @str: pointer to char
  * Return: void
  */

void _puts(char *str)
{
	int i = 0;

	while (str[i] != '\0')
	{
		_putchar(str[i]);
		i++;
	}
	_putchar('\n');
}
3-strcmp.c/     0           0     0     644     298       `
#include "main.h"

/**
 * _strcmp - a function that compares two strings.
 * @s1: an input string
 * @s2: an input string
 * Return: The difference s1 - s2
 */
int _strcmp(char *s1, char *s2)
{
	while (*s1 && *s2)
	{
		if (*s1 != *s2)
			return (*s1 - *s2);
		s1++, s2++;
	}
	return (*s1 - *s2);
}
3-strspn.c/     0           0     0     644     68        `
#include "main.h"

unsigned int _strspn(char *s, char *accept)
{

}
4-isalpha.c/    0           0     0     644     338       `
#include <stdio.h>
#include "main.h"

/**
  * _isalpha -  checks for alphabetic character.
  * @c: paramter to check if is upper or not
  *
  * Return: 1 if c is a letter, lowercase or uppercase, 0 otherwise
  */
int _isalpha(int c)
{
	int check = 0;

	if ((c >= 65 && c <= 90) || (c >= 97 && c <= 122))
		check = 1;

	return  (check);
}
4-strpbrk.c/    0           0     0     644     62        `
#include "main.h"

char *_strpbrk(char *s, char *accept)
{

}
5-strstr.c/     0           0     0     644     68        `
#include "main.h"

char *_strstr(char *haystack, char *needle)
{

}
6-abs.c/        0           0     0     644     259       `
#include "main.h"
# include <stdlib.h>

/**
  * _abs -  computes the absolute value of an integer.
  * @n: number to get its abs
  *
  * Return: the absolute value
  */
int _abs(int n)
{
	/* return (abs(n)); */
	if (n < 0)
		return (n * -1);
	return (n);

}


9-strcpy.c/     0           0     0     644     61        `
#include "main.h"

char *_strcpy(char *dest, char *src)
{

}

main.c/         0           0     0     644     142       `
#include "main.h"

int main(void)
{
	_puts("\"At the end of the day, my goal was to be the best hacker\"\n\t- Kevin Mitnick");
	return (0);
}
_putchar.c/     0           0     0     644     247       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
	return (write(1, &c, 1));
}

